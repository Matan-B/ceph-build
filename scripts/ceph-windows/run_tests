#!/usr/bin/env bash
set -o errexit
set -o pipefail

if [[ ! -f $WORKSPACE/ceph.zip ]]; then echo "ERROR: The Ceph Windows build zip file doesn't exist at '$WORKSPACE/ceph.zip'"; exit 1; fi
if [[ ! -f $CEPH_WINDOWS_CONF ]]; then echo "ERROR: The Ceph Windows config file doesn't exist at '$CEPH_WINDOWS_CONF'"; exit 1; fi
if [[ ! -f $CEPH_KEYRING ]]; then echo "ERROR: The Ceph keyring file doesn't exist at '$CEPH_KEYRING'"; exit 1; fi

if [[ -z $WINDOWS_SSH_USER ]]; then echo "ERROR: The WINDOWS_SSH_USER env variable is not set"; exit 1; fi
if [[ -z $WINDOWS_VM_IP ]]; then echo "ERROR: The WINDOWS_VM_IP env variable is not set"; exit 1; fi

export SSH_USER=$WINDOWS_SSH_USER
export SSH_ADDRESS=$WINDOWS_VM_IP

WIN_USERSPACE_CRASH_DUMPS=${WIN_USERSPACE_CRASH_DUMPS:-"C:\\userspace_crash_dumps"}

#
# Clone ceph-win32-tests repo
#
SSH_TIMEOUT=5m ssh_exec git.exe clone https://github.com/ceph/ceph-win32-tests.git /workspace/repos/ceph-win32-tests

#
# Set Windows user-space crash dumps directory
#
ssh_exec powershell.exe /workspace/repos/ceph-win32-tests/test_host/set_userspace_crashdump_location.ps1 -dumpDir $WIN_USERSPACE_CRASH_DUMPS

#
# Copy the ceph.conf and keyring to the Windows VM
#
ssh_exec powershell.exe mkdir -force /ProgramData/ceph/out
scp_upload $CEPH_WINDOWS_CONF /ProgramData/ceph/ceph.conf
scp_upload $CEPH_KEYRING /ProgramData/ceph/keyring

#
# Setup the Ceph Windows build in the Windows VM
#
SSH_TIMEOUT=5m scp_upload $WORKSPACE/ceph.zip /ceph.zip
SSH_TIMEOUT=10m ssh_exec powershell.exe "\$ProgressPreference='SilentlyContinue'; Expand-Archive -Path /ceph.zip -DestinationPath / -Force"
ssh_exec powershell.exe "New-Service -Name ceph-rbd -BinaryPathName 'c:\ceph\rbd-wnbd.exe service'"
ssh_exec powershell.exe Start-Service -Name ceph-rbd

#
# Collect artifacts on script exit
#
function collect_artifacts() {
    rm -rf $WORKSPACE/artifacts
    mkdir -p $WORKSPACE/artifacts

    scp_download /workspace/test_results $WORKSPACE/artifacts/test_results
    if [[ "$INCLUDE_USERSPACE_CRASH_DUMPS" = true ]]; then
        scp_download /userspace_crash_dumps $WORKSPACE/artifacts/userspace_crash_dumps
    fi
    if [[ "$INCLUDE_CEPH_ZIP" = true ]]; then
        cp $WORKSPACE/ceph.zip $WORKSPACE/artifacts/ceph.zip
    fi
}
trap collect_artifacts EXIT

#
# Run the Windows tests
#
SSH_TIMEOUT=1h ssh_exec powershell.exe /workspace/repos/ceph-win32-tests/test_host/run_tests.ps1 -workerCount 4

ssh_exec curl.exe -s -L -o /workspace/test_rbd_wnbd.py https://raw.githubusercontent.com/ceph/ceph/main/qa/workunits/windows/test_rbd_wnbd.py
SSH_TIMEOUT=5m ssh_exec python.exe /workspace/test_rbd_wnbd.py --test-name RbdTest --iterations 100
SSH_TIMEOUT=5m ssh_exec python.exe /workspace/test_rbd_wnbd.py --test-name RbdFioTest --iterations 100
# We're temporarily disabling this test, see the following for more details:
#   https://github.com/ceph/ceph/pull/48929
# SSH_TIMEOUT=5m ssh_exec python.exe /workspace/test_rbd_wnbd.py --test-name RbdStampTest --iterations 100
